let disallowed_protocols = ["telnet", "ssh"]

rule shell_accessible {
   let protos = servers[*].protocols[*]
   %disallowed_protocols[0] IN %protos OR
   %disallowed_protocols[1] IN %protos
}

rule app_https {
    servers[0].id == "app"
    servers[0].protocols[0] == "https"
}

rule k8s_exists {
    request EXISTS
    # request.apiVersion == /k8s\.io/ # FAIL version
    request.apiVersion != /k8s\.io/
}

rule k8s_container_images when k8s_exists {
    let images = request.object.spec.containers[*].image

    request.kind.kind == "Pod"
    # not %images == /^hooli.com/ <<images does not come from trusted registry>> # PASS
    %images == /^hooli.com/ <<images does not come from trusted registry>> # FAIL
}

